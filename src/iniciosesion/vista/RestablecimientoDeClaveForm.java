/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package iniciosesion.vista;

import iniciosesion.vista.MenuPrincipalForm;
import iniciosesion.vista.LoginForm;
import iniciosesion.controlador.Conectar;
import java.awt.event.KeyEvent;
import java.sql.Array;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.Arrays;
import javax.swing.JOptionPane;

/**
 *
 * @author Daniela Ordoñez
 */
public class RestablecimientoDeClaveForm extends javax.swing.JFrame {
    
        int intentos = 0;
        
        Connection conn = new Conectar().getConnection();
    /**
     * Creates new form RestablecimientoDeClaveForm
     */
    public RestablecimientoDeClaveForm() {
        initComponents();
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        txtUsuario = new javax.swing.JTextField();
        txtClave = new javax.swing.JPasswordField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        btnIngresar = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtNuevaClave = new javax.swing.JPasswordField();
        txtNuevaClaveVerificacion = new javax.swing.JPasswordField();
        txtClaveActual = new javax.swing.JPasswordField();
        iconCheck = new javax.swing.JLabel();
        btnConfirmar = new javax.swing.JButton();
        btnIngresar2 = new javax.swing.JButton();

        jPanel2.setBackground(new java.awt.Color(204, 204, 204));

        txtUsuario.setToolTipText("");
        txtUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUsuarioActionPerformed(evt);
            }
        });

        jLabel2.setText("Usuario");

        jLabel3.setText("Clave");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addGap(32, 32, 32)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtClave, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(36, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(41, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(43, 43, 43)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtClave, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(39, 39, 39))
        );

        btnIngresar.setText("Ingresar");
        btnIngresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIngresarActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setText("Inicio de Sesión");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("DKasaMuebles - Restablecimiento de Clave");

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("Restablecimiento de Clave");

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));

        jLabel5.setText("Clave Actual");

        jLabel6.setText("Nueva Clave");

        jLabel7.setText("Verificar Nueva Clave");

        txtNuevaClave.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNuevaClaveKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNuevaClaveKeyTyped(evt);
            }
        });

        txtNuevaClaveVerificacion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNuevaClaveVerificacionKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNuevaClaveVerificacionKeyTyped(evt);
            }
        });

        txtClaveActual.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtClaveActualActionPerformed(evt);
            }
        });
        txtClaveActual.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtClaveActualKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtClaveActualKeyTyped(evt);
            }
        });

        iconCheck.setIcon(new javax.swing.ImageIcon("C:\\Users\\Daniela Ordoñez\\Desktop\\icon-check.png")); // NOI18N
        iconCheck.setEnabled(false);
        iconCheck.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                iconCheckKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtNuevaClave, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNuevaClaveVerificacion, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(txtClaveActual, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(iconCheck, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(52, 52, 52))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel5)
                        .addComponent(txtClaveActual, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(iconCheck))
                .addGap(27, 27, 27)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtNuevaClave, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtNuevaClaveVerificacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(46, Short.MAX_VALUE))
        );

        btnConfirmar.setText("Confirmar");
        btnConfirmar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfirmarActionPerformed(evt);
            }
        });

        btnIngresar2.setText("Cancelar");
        btnIngresar2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIngresar2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(btnConfirmar, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnIngresar2, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 376, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(122, 122, 122)))
                .addContainerGap(60, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnConfirmar)
                    .addComponent(btnIngresar2))
                .addContainerGap(58, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUsuarioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUsuarioActionPerformed

    private void btnIngresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIngresarActionPerformed

        
    }//GEN-LAST:event_btnIngresarActionPerformed

    private void btnConfirmarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfirmarActionPerformed
      
    String sqlSel = "select * from usuarios where claveusuario=? ";
    //String sqlUPD = "UPDATE usuarios SET claveusuario=? WHERE codigousuario=? ;"; 
    
        try {
            PreparedStatement ps = conn.prepareStatement(sqlSel);
          
            ps.setString(1,txtClaveActual.getText());
            ResultSet rs = ps.executeQuery();
            
             if(rs.next()){ 
                actualizarClave();               
             }
             else if(txtClaveActual.getText().equals("") || txtNuevaClave.getText().equals("") || txtNuevaClaveVerificacion.getText().equals("")  ){
                  JOptionPane.showMessageDialog(null,"Error, no dejar campos vacios " );
                  txtClaveActual.requestFocus();
                  }
            else if(txtClaveActual.getText().length()<=intLimiteCaracteresMin || txtNuevaClave.getText().length()<=intLimiteCaracteresMin || txtNuevaClaveVerificacion.getText().length()<=intLimiteCaracteresMin ){
                  JOptionPane.showMessageDialog(null,"La clave no puede ser menos de 8 caracteres");
                  txtClaveActual.requestFocus();
                  txtClaveActual.setText("");
                  }
             else {
               JOptionPane.showMessageDialog(null,"Error, clave actual incorrecta ");  
                txtClaveActual.requestFocus();
                txtClaveActual.setText("");
             }
        } catch (Exception e) {
            System.out.println("Error");
            System.out.println(e.getMessage());
        }
   
    }//GEN-LAST:event_btnConfirmarActionPerformed

    private void btnIngresar2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIngresar2ActionPerformed

        this.dispose();
        MenuPrincipalForm MP = new MenuPrincipalForm();
        MP.setVisible(true);
    }//GEN-LAST:event_btnIngresar2ActionPerformed

    private void txtClaveActualActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtClaveActualActionPerformed

    }//GEN-LAST:event_txtClaveActualActionPerformed

    private void txtClaveActualKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtClaveActualKeyTyped
        
        if(txtClaveActual.getText().length()>=intLimiteCaracteresMax){
           evt.consume();
        }       
       
    }//GEN-LAST:event_txtClaveActualKeyTyped

    private void txtNuevaClaveKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNuevaClaveKeyTyped
       
    }//GEN-LAST:event_txtNuevaClaveKeyTyped

    private void txtNuevaClaveVerificacionKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNuevaClaveVerificacionKeyTyped
           
        char charTeclaPresionada =evt.getKeyChar();
        if(charTeclaPresionada==KeyEvent.VK_ENTER){
            btnConfirmar.doClick();
        }       
        
        if(txtNuevaClaveVerificacion.getText().length()>=intLimiteCaracteresMax){
           evt.consume();
           }
    }//GEN-LAST:event_txtNuevaClaveVerificacionKeyTyped

    private void iconCheckKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_iconCheckKeyTyped
        
    }//GEN-LAST:event_iconCheckKeyTyped

    private void txtClaveActualKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtClaveActualKeyPressed
        int codigoBoton = evt.getKeyCode();
        if (evt.isControlDown() && codigoBoton == KeyEvent.VK_V) {
                    JOptionPane.showMessageDialog(null,"Ingrese manualmente sus credenciales");
                    evt.consume();
                    txtClaveActual.setText("");   
                }
    }//GEN-LAST:event_txtClaveActualKeyPressed

    private void txtNuevaClaveKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNuevaClaveKeyPressed
        int codigoBoton = evt.getKeyCode();
        if (evt.isControlDown() && codigoBoton == KeyEvent.VK_V) {
                    JOptionPane.showMessageDialog(null,"Ingrese manualmente sus credenciales");
                    evt.consume();
                    txtNuevaClave.setText("");   
                }
    }//GEN-LAST:event_txtNuevaClaveKeyPressed

    private void txtNuevaClaveVerificacionKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNuevaClaveVerificacionKeyPressed
        int codigoBoton = evt.getKeyCode();
        if (evt.isControlDown() && codigoBoton == KeyEvent.VK_V) {
                    JOptionPane.showMessageDialog(null,"Ingrese manualmente sus credenciales");
                    evt.consume();
                    txtNuevaClaveVerificacion.setText("");   
                }
    }//GEN-LAST:event_txtNuevaClaveVerificacionKeyPressed
   // creamos variable global intLimite 
    int intLimiteCaracteresMax = 16;
    int intLimiteCaracteresMin = 7;
    
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RestablecimientoDeClaveForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnConfirmar;
    private javax.swing.JButton btnIngresar;
    private javax.swing.JButton btnIngresar2;
    private javax.swing.JLabel iconCheck;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPasswordField txtClave;
    private javax.swing.JPasswordField txtClaveActual;
    private javax.swing.JPasswordField txtNuevaClave;
    private javax.swing.JPasswordField txtNuevaClaveVerificacion;
    private javax.swing.JTextField txtUsuario;
    // End of variables declaration//GEN-END:variables

    
    //verificar clave actual
   

    //Actualizar Clave
    private void actualizarClave() {     
        char[] a=txtNuevaClave.getPassword();
        char[] b=txtNuevaClaveVerificacion.getPassword();
        
        //creamos la misma variable de donde guardamos el resultSet en el login
        String usuario = LoginForm.usuario;
        
        String sqlupdate ="UPDATE usuarios set claveusuario=? WHERE nombreusuario=?;";
        
        try {
            PreparedStatement ps = conn.prepareStatement(sqlupdate);
        
            
            if((Arrays.equals(a,b))==true){
                ps.setString(1,txtNuevaClave.getText());
                ps.setString(2,usuario); // le pasamos como parametro 
                int rs = ps.executeUpdate();
                JOptionPane.showMessageDialog(null,"Clave modificada exitosamente"); 
                txtClave.setText("");
                txtNuevaClave.setText("");
                txtNuevaClaveVerificacion.setText("");
            }
            else //if(!Character.isWhiteSpace(Arrays.charAt(i))){
            {
               JOptionPane.showMessageDialog(null,"Error, las contraseñas no coinciden");
               txtNuevaClave.setText("");
                txtNuevaClaveVerificacion.setText("");  
            }

        } catch (Exception e) {
            System.out.println("Error");  
        }
    }

    //metodo que sirve como validacion para que deje espacios vacios
    private void validarEspacios() {
        
        if(txtClaveActual.getText().equals("") || txtNuevaClave.getText().equals("") || txtNuevaClaveVerificacion.getText().equals("")  ){
           JOptionPane.showMessageDialog(null,"Error, no dejar campos vacios " );
           txtClaveActual.requestFocus();
       }
    }
    
    
}

    
